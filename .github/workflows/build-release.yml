name: Release

on:
  push:
    tags:
    - '*'

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - 
        name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_DEPLOY_KEY }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build
        env:
          BASTILLION_VERSION: ${{ steps.get_version.outputs.VERSION }}
          DOCKER_USER: ${{ secrets.DOCKER_HUB_USERNAME }}
        run: |
          BASTILLION_FILENAME_VERSION=$(echo $BASTILLION_VERSION | sed -r 's/(.*)\./\1_/')
          # Fix for 3.14.0
          if [ "${#BASTILLION_FILENAME_VERSION}" -lt 7 ]; then BASTILLION_FILENAME_VERSION=$(echo "${BASTILLION_FILENAME_VERSION}0"); fi
          docker buildx build -t "${DOCKER_USER}/bastillion:${BASTILLION_VERSION}" \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --build-arg BASTILLION_VERSION=${BASTILLION_VERSION} \
            --build-arg BASTILLION_FILENAME_VERSION=${BASTILLION_FILENAME_VERSION} \
            --push .
  build-alpine:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - 
        name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_DEPLOY_KEY }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build
        env:
          BASTILLION_VERSION: ${{ steps.get_version.outputs.VERSION }}
          DOCKER_USER: ${{ secrets.DOCKER_HUB_USERNAME }}
        run: |
          BASTILLION_FILENAME_VERSION=$(echo $BASTILLION_VERSION | sed -r 's/(.*)\./\1_/')
          # Fix for 3.14.0
          if [ "${#BASTILLION_FILENAME_VERSION}" -lt 7 ]; then BASTILLION_FILENAME_VERSION=$(echo "${BASTILLION_FILENAME_VERSION}0"); fi
          docker buildx build -t "${DOCKER_USER}/bastillion:${BASTILLION_VERSION}-alpine" \
            --platform linux/amd64,linux/arm64 \
            --build-arg BASTILLION_VERSION=${BASTILLION_VERSION} \
            --build-arg BASTILLION_FILENAME_VERSION=${BASTILLION_FILENAME_VERSION} \
            --push --file ./Dockerfile.alpine .
