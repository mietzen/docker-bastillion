name: Master

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_DEPLOY_KEY }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build
        env:
          DOCKER_USER: ${{ secrets.DOCKER_HUB_USERNAME }}
        run: |
          BASTILLION_VERSION=$(curl -sSLq https://api.github.com/repos/bastillion-io/Bastillion/releases/latest | jq -r ".name")
          BASTILLION_FILENAME_VERSION=$(echo $BASTILLION_VERSION | sed -r 's/(.*)\./\1_/')
          # Fix for 3.14.0
          if [ "${#BASTILLION_FILENAME_VERSION}" -lt 7 ]; then BASTILLION_FILENAME_VERSION=$(echo "${BASTILLION_FILENAME_VERSION}0"); fi
          docker buildx build -t "${DOCKER_USER}/bastillion:${BASTILLION_VERSION}" \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --build-arg BASTILLION_VERSION=${BASTILLION_VERSION} \
            --build-arg BASTILLION_FILENAME_VERSION=${BASTILLION_FILENAME_VERSION} .
      -
        name: Setup tests
        run: |
          BASTILLION_VERSION=$(curl -sSLq https://api.github.com/repos/bastillion-io/Bastillion/releases/latest | jq -r ".name")
          docker run -d --rm --name bastillion -v $(pwd)/keydb:/keydb bastillion:${BASTILLION_VERSION}
          docker exec -u 0 -it bastillion apt install net-tools
      -
        name: InSpec Integration Test
        run: |
          inspec exec .test//integration -t docker://bastillion
      -
        name: Check logs
        run: |
          if [ docker logs bastillion | grep Exception -q ]; then
            docker logs bastillion
            exit 1
          else:
            echo "No Exceptions"
          fi
      -
        name: Teardown
        run: |
          docker container stop bastillion
          rm -rf keydb
  build-alpine:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_DEPLOY_KEY }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build
        env:
          DOCKER_USER: ${{ secrets.DOCKER_HUB_USERNAME }}
        run: |
          BASTILLION_VERSION=$(curl -sSLq https://api.github.com/repos/bastillion-io/Bastillion/releases/latest | jq -r ".name")
          BASTILLION_FILENAME_VERSION=$(echo $BASTILLION_VERSION | sed -r 's/(.*)\./\1_/')
          # Fix for 3.14.0
          if [ "${#BASTILLION_FILENAME_VERSION}" -lt 7 ]; then BASTILLION_FILENAME_VERSION=$(echo "${BASTILLION_FILENAME_VERSION}0"); fi
          docker buildx build -t "${DOCKER_USER}/bastillion:${BASTILLION_VERSION}-alpine" \
            --platform linux/amd64,linux/arm64 \
            --build-arg BASTILLION_VERSION=${BASTILLION_VERSION} \
            --build-arg BASTILLION_FILENAME_VERSION=${BASTILLION_FILENAME_VERSION} \
            --file ./Dockerfile.alpine .
      -
        name: Setup tests
        run: |
          BASTILLION_VERSION=$(curl -sSLq https://api.github.com/repos/bastillion-io/Bastillion/releases/latest | jq -r ".name")
          docker run -d --rm --name bastillion -v $(pwd)/keydb:/keydb "bastillion:${BASTILLION_VERSION}-alpine"
          docker exec -u 0 -it bastillion apk --no-cache add net-tools
      -
        name: InSpec Integration Test
        run: |
          inspec exec .test//integration -t docker://bastillion
      -
        name: Check logs
        run: |
          if [ docker logs bastillion | grep Exception -q ]; then
            docker logs bastillion
            exit 1
          else:
            echo "No Exceptions"
          fi
      -
        name: Teardown
        run: |
          docker container stop bastillion
          rm -rf keydb